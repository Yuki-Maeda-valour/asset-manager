generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "scheme.md"
  // disabled = true
}

model User {
  id         Int         @id @default(autoincrement()) // ユーザーを一意に識別するための主キー
  username   String // ユーザーのユーザー名
  uid        String @unique // ユーザーのUID
  role       Role // ユーザーのロール
  createdAt  DateTime    @default(now()) // ユーザーが作成された日時
  updatedAt  DateTime    @updatedAt // ユーザー情報が最後に更新された日時
  borrowings Borrowing[] // ユーザーが借りている資産のリスト

  @@map(name: "users")
}

model Asset {
  id         Int         @id @default(autoincrement()) // 資産を一意に識別するための主キー
  name       String // 資産の名前
  type       Type // 資産のタイプを示す
  status     Status // ステータス (enum)
  createdAt  DateTime    @default(now()) // 資産が作成された日時
  updatedAt  DateTime    @updatedAt // 資産情報が最後に更新された日時
  borrowings Borrowing[] // この資産が借りられているリスト

  @@map(name: "assets")
}

model Borrowing {
  id         Int       @id @default(autoincrement()) // 貸出を一意に識別するための主キー
  borrowedAt DateTime // 貸出日時
  returnedAt DateTime? // 返却日時
  deadline   DateTime // 返却期限
  userId     Int // ユーザーID
  assetId    Int // 資産ID
  createdAt  DateTime  @default(now()) // 貸出が作成された日時
  updatedAt  DateTime  @updatedAt // 貸出情報が最後に更新された日時
  user       User      @relation(fields: [userId], references: [id]) // ユーザーへのリレーション
  asset      Asset     @relation(fields: [assetId], references: [id]) // 資産へのリレーション

  @@map(name: "borrowings")
}

enum Status {
  RESERVED // 予約済み
  LENT // 貸出中
  AVAILABLE // 貸出可能
  SUSPENDED // 貸出停止
}

enum Role {
  USER // 一般ユーザー
  ADMIN // 管理者
}

enum Type {
  PC
  SP
  WIFI
  MONITOR
}
